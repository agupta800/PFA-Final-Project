@model PFA.BlogVM.HomeVM
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@inject UserManager<IdentityUser> userManager
@using Microsoft.AspNetCore.Identity

@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string thumbnailUrl = "";
    if (Model != null)
    {
        if (Model.ThumbnailUrl == "")
        {
            thumbnailUrl = "/blog/assets/img/home-bg.jpg";
        }
        else
        {
            thumbnailUrl = "/thumbnails/" + Model.ThumbnailUrl;
        }
    }
}

<!-- Page Header-->
<header class="masthead" style="background-image: url('@thumbnailUrl')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                @if (Model != null)
                {
                    <div class="site-heading">
                        <h1>@Model.Title</h1>
                        <span class="subheading">@Model.ShortDescription</span>
                    </div>
                }
            </div>
        </div>
    </div>
</header>

<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            @if (Model != null && Model.Posts != null && Model.Posts.Count > 0)
            {
                @foreach (var post in Model.Posts)
                {
                    <!-- Post preview-->
                    <div class="post-preview">
                        <a asp-controller="Blog" asp-action="Post" asp-route-slug="@post.Slug">
                            <h2 class="post-title">@post.Title</h2>
                            <h3 class="post-subtitle">@post.ShortDescription</h3>
                        </a>
                        <p class="post-meta">
                            Posted on @post.CreatedDate.ToShortDateString()
                        </p>

                    </div>
                    <!-- Divider-->
                    <hr class="my-4" />
                }

                <!-- PagedListPager for Pagination -->
                @if (Model.Posts.Count > 0)
                {
                    @Html.PagedListPager(Model.Posts, page => Url.Action("Index",
                             new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
                             new PagedListRenderOptions()
            {
                ContainerDivClasses = new List<string> { "d-flex justify-content-start mb-4" },
                UlElementClasses = new List<string> { "pagination" },
                LiElementClasses = new List<string> { "btn btn-primary mx-1 text-uppercase" },
                ActiveLiElementClass = "active",
            })
                }
            }
            else
            {
                <p>No posts available.</p>
            }
        </div>
    </div>
</div>
