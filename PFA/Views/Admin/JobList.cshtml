@{
    ViewData["Title"] = "JobList";
    Layout = "~/Views/Shared/_AdminPartial.cshtml";
}
<script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>
<div id="GetJobCount" style="text-align: center;">
    <h1>JobList</h1>
@*     <p>Total Job Posts: <span id="totalCount"></span></p>
 *@</div>



<div id="grid" class="col-10 offset-1 "></div>

<!-- Include necessary scripts -->
<script>
    $(document).ready(function () {
        $("#grid").kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: "/Admin/AllJobs",
                        dataType: "json"
                    },
                    destroy: {
                        url: "/Admin/DeleteJob",
                        type: "POST",
                        dataType: "json"
                    }
                },
                schema: {
                    model: {
                        id: "jobID",
                        fields: {
                            JobID: { type: "int" },
                            companyname: { type: "string" },
                            jobTitle: { type: "string" },
                            applylink: { type: "string" },
                            txtDescription: { type: "string" },
                            inputDate: { type: "date" },
                            companyImageUrl: { type: "string" }
                        }
                    }
                },
                pageSize: 20,
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            height: 400,
            filterable: true,
            sortable: true,
            pageable: true,
            batch: true,
            editable: {
                mode: "inline",
                window: {
                    title: "Edit Job Record",
                    animation: true
                }
            },
            toolbar: ["create", "save", "cancel"],
            columns: [
                { command: ["edit", "destroy"], title: "Action", width: 150 },
                { field: "companyname", title: "Company Name", width: 150 },
                { field: "jobTitle", title: "Job Title", width: 150 },
                { field: "applylink", title: "Apply Link", width: 150 },
                { field: "txtDescription", title: "Description", width: 150 },
                {
                    field: "inputDate",
                    title: "Date",
                    width: 150,
                    format: "{0:MM-dd-yyyy H:mm}",
                    editor: function (container, options) {
                        $('<input name="' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDatePicker({
                                format: "yyyy-MM-dd H:mm",
                                change: function () {
                                    var value = this.value();
                                    var formattedDate = kendo.toString(value, "yyyy-MM-dd H:mm");
                                    options.model.inputDate = formattedDate;
                                }
                            });
                    }
                },
                { field: "companyImageUrl", title: "Company Image Url", width: 200 }
            ],
            save: function (e) {
                e.preventDefault();

                // Extract the edited data
                var editedData = e.model.toJSON();

                // Perform custom logic or send the data to the server manually
                $.ajax({
                    url: "/Admin/Updatejob",
                    type: "POST",
                    data: editedData,
                    success: function (result) {
                        // Handle the success response
                        console.log("Data updated successfully");
                        var successMessage = "Data Updated Successfully";

                        // You can use successMessage as needed (e.g., display it in a popup)
                        alert(successMessage);
                        // You may want to refresh the grid to reflect the updated data
                        $("#grid").data("kendoGrid").dataSource.read();
                    },
                    error: function (xhr, status, error) {
                        // Handle the error response
                        console.error("Error updating data:", error);
                    }
                });
                CKEDITOR.replace('contentEditor');

                // Add event listener for CKEditor content change
                CKEDITOR.instances.contentEditor.on('change', function () {
                    // Update the textarea value when CKEditor content changes
                    this.updateElement();
                });
            },
     
        });
        grid.dataSource.bind("change", function () {
            // Fetch job count after a data item is updated
            $.ajax({
                url: "/Admin/GetJobCount",
                type: "GET",
                success: function (result) {
                    $("#totalCount").text(result);
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching job count:", error);
                }
            });
        });
    });
    
</script>

<!-- Include CKEditor script -->
<script src="https://cdn.ckeditor.com/4.16.2/standard/ckeditor.js"></script>

<!-- Your HTML code -->

<textarea id="editor1" rows="10" cols="80">
    This is my textarea to be replaced with CKEditor 4.
</textarea>
<button onclick="myFunction()">Submit</button>

<script>
    // Replace the <textarea id="editor1"> with a CKEditor 4 instance, using default configuration.
    CKEDITOR.replace('editor1');

    function myFunction() {
        // Get the content from CKEditor
        var data = CKEDITOR.instances.editor1.getData();

        // Update the content in the same editor
        CKEDITOR.instances.editor1.setData(data);

        // Display the content in the output area with HTML rendering
        document.getElementById("output").innerHTML = data;
    }
</script>

<!-- Your existing JavaScript code -->

<div id="output" style="margin-top: 20px;">
    <!-- The content from CKEditor will be displayed here with HTML rendering -->
</div>

